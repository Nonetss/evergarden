---@param theme evergarden.types.theme
---@param config evergarden.types.config
return function(theme, config)
  return {
    ['@annotation']            = { theme.syntax.annotation },
    ['@attribute']             = { theme.seiun },
    ['@boolean']               = { link = 'Boolean' },
    ['@character']             = { link = 'Character' },
    ['@comment']               = { theme.comment, italic = config.style.comment.italic },
    ['@conditional']           = { link = 'Conditional' },
    ['@constant']              = { theme.syntax.constant },
    ['@constant.builtin']      = { link = '@constant' },
    ['@constant.macro']        = { link = '@constant' },
    ['@constructor']           = { theme.shinme },
    ['@exception']             = { link = 'Exception' },
    ['@field']                 = { theme.syntax.object },
    ['@float']                 = { link = 'Float' },
    ['@function']              = { theme.syntax.call },
    ['@function.call']         = { link = '@function' },
    ['@function.builtin']      = { link = '@constant' },
    ['@function.macro']        = { theme.syntax.macro },
    ['@include']               = { link = 'Include' },
    ['@keyword']               = { theme.syntax.keyword, italic = config.style.keyword.italic },
    ['@keyword.function']      = { link = '@keyword' },
    ['@keyword.operator']      = { theme.taiyo },
    ['@label']                 = { link = 'Label' },
    ['@method']                = { theme.syntax.context },
    ['@method.call']           = { link = '@function.call' },
    ['@namespace']             = { link = '@constant' },
    ['@none']                  = { theme.fg },
    ['@number']                = { link = 'Number' },
    ['@operator']              = { theme.syntax.context },
    ['@parameter']             = { link = '@variable' },
    ['@parameter.reference']   = { link = '@parameter' },
    ['@property']              = { theme.syntax.object },
    ['@punctuation.bracket']   = { theme.syntax.context },
    ['@punctuation.delimiter'] = { theme.syntax.context },
    ['@punctuation.special']   = { theme.syntax.context },
    ['@repeat']                = { link = 'Repeat' },
    ['@storageclass']          = { link = 'StorageClass' },
    ['@string']                = { theme.syntax.string },
    ['@string.escape']         = { theme.sakaeru },
    ['@string.regex']          = { link = '@string.escape' },
    ['@symbol']                = { theme.fg1 },
    ['@strike']                = { theme.fg2 },
    ['@math']                  = { theme.sukai },
    ['@type']                  = { theme.syntax.type, italic = config.style.types.italic },
    ['@type.builtin']          = { link = '@type' },
    ['@type.qualifier']        = { link = '@keyword' },
    ['@uri']                   = { theme.seiun },
    ['@variable']              = { theme.syntax.object },
    ['@variable.builtin']      = { link = '@constant' },
  }
end
